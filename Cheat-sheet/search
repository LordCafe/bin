#!/bin/bash

# Load environment variables
if [ -f "$HOME/bin/.env" ]; then 
    set -a
    source "$HOME/bin/.env"
    set +a
fi

DIR="${CHEAT_SHEETS_DIR:-$HOME/cheat-sheet}"
SUGGESTIONS=false
SEARCH=""
SPECIFIC_FILE=""

# Parse flags
while [[ $# -gt 0 ]]; do
  case $1 in
    -s|--suggestions)
      SUGGESTIONS=true
      shift
      ;;
    *)
      SEARCH="$1"
      shift
      ;;
  esac
done

if [[ -z "$SEARCH" ]]; then
  echo "Archivos disponibles en tu knowledge base:"
  echo "="$(printf '%.0s' {1..40})
  
  for FILE in "$DIR"/*.md; do
    if [[ -f "$FILE" ]]; then
      filename=$(basename "$FILE" .md)
      # Contar entradas en el archivo
      entry_count=$(grep -c "<!-- cheat:start -->" "$FILE" 2>/dev/null || echo "0")
      printf "  %-20s (%d entradas)\n" "$filename" "$entry_count"
    fi
  done
  
  echo
  echo "Uso: kb search <palabra>           # Buscar en todas las notas"
  echo "     kb search <archivo>:<palabra> # Buscar solo en un archivo específico"
  echo "     kb search -s <palabra>        # Mostrar sugerencias si no hay resultados"
  echo "     kb show <archivo>            # Ver últimas entradas de un archivo"
  exit 0
fi

# Detectar si es búsqueda específica por archivo (formato: archivo:término)
if [[ "$SEARCH" == *":"* ]]; then
  SPECIFIC_FILE=$(echo "$SEARCH" | cut -d':' -f1)
  SEARCH=$(echo "$SEARCH" | cut -d':' -f2-)
  
  if [[ -z "$SEARCH" ]]; then
    echo "Error: Debes especificar un término de búsqueda después de ':'"
    echo "Ejemplo: kb search bash:chmod"
    exit 1
  fi
fi

# Determinar qué archivos buscar
if [[ -n "$SPECIFIC_FILE" ]]; then
  # Búsqueda en archivo específico
  TARGET_FILE="$DIR/$SPECIFIC_FILE.md"
  if [[ ! -f "$TARGET_FILE" ]]; then
    echo "Error: Archivo '$SPECIFIC_FILE.md' no encontrado en $DIR"
    exit 1
  fi
  FILES=("$TARGET_FILE")
  echo "Buscando '$SEARCH' en $SPECIFIC_FILE.md:"
  echo "="$(printf '%.0s' {1..40})
else
  # Búsqueda global
  FILES=("$DIR"/*.md)
fi

RESULTS_FOUND=false

for FILE in "${FILES[@]}"; do
  [[ ! -f "$FILE" ]] && continue
  RESULT=$(awk -v word="$SEARCH" '
    /<!-- cheat:start -->/ {block=1; id=""; note=""; date=""; in_note=0; line_count=0}
    /^id:/ {if(block) id=$2}
    /^note:/ {if(block) in_note=1; note=""; line_count=0; next}
    in_note && !/^date:/ {
      note = note "\n" $0
      lines[line_count++] = $0
      next
    }
    /^date:/ {if(block) {date=substr($0,7); in_note=0}}
    /<!-- cheat:end -->/ {
      if(block && note ~ word) {
        fname=FILENAME
        sub(/^.*\//,"",fname)
        sub(/\.md$/,"",fname)
        print fname ": " id " →"
        for(i=0;i<line_count && i<2;i++) print "   " lines[i]
        print "   [" date "]\n"
        found=1
      }
      delete lines
      block=0
    }
    END {if(found) exit 0; else exit 1}
  ' "$FILE")
  
  if [[ $? -eq 0 ]]; then
    echo "$RESULT"
    RESULTS_FOUND=true
  fi
done

# Si no se encontraron resultados y se usó la flag -s, mostrar sugerencias
if [[ "$RESULTS_FOUND" == "false" ]]; then
  echo "No se encontraron resultados para '$SEARCH'"
  echo
  
  if [[ "$SUGGESTIONS" == "true" ]]; then
    "$HOME/bin/Cheat-sheet/suggest-aliases" "$SEARCH"
  else
    echo "Tip: Usa 'kb search -s $SEARCH' para ver sugerencias de aliases similares"
  fi
fi
