#!/bin/bash

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

show_usage() {
    echo -e "${BLUE}Usage:${NC} $(basename $0) [network_name] [options]"
    echo -e "${BLUE}Options:${NC}"
    echo "  -a, --all     Show all networks (including unused)"
    echo "  -h, --help    Show this help"
}

show_network_details() {
    local network="$1"
    
    echo -e "${GREEN}Network:${NC} $network"
    echo -e "${YELLOW}CONTAINER${NC}               ${YELLOW}IP ADDRESS${NC}"
    echo "────────────────────────────────────────────────"
    
    # Get containers connected to this network
    docker network inspect "$network" --format='
{{- range $id, $conf := .Containers}}
{{$conf.Name}} {{$conf.IPv4Address}}
{{- end}}' | while IFS=' ' read -r container ip; do
        if [[ -n "$container" && "$container" != "" ]]; then
            # Remove /XX from IP (CIDR notation)
            clean_ip="${ip%/*}"
            printf "%-25s %s\n" "$container" "${clean_ip:-N/A}"
        fi
    done
}

list_all_networks() {
    local show_all="$1"
    
    if [[ "$show_all" == "true" ]]; then
        echo -e "${BLUE}All networks:${NC}"
        networks=$(docker network ls --format '{{.Name}}')
    else
        echo -e "${BLUE}Networks with containers:${NC}"
        networks=$(docker network ls --format '{{.Name}}' | grep -v -E '^(bridge|host|none)$')
    fi
    
    echo -e "${YELLOW}NETWORK${NC}                    ${YELLOW}CONTAINERS${NC}"
    echo "──────────────────────────────────────────────────────────"
    
    for net in $networks; do
        if [[ -n "$net" ]]; then
            containers=$(docker network inspect "$net" --format='{{range $id, $conf := .Containers}}{{$conf.Name}} {{end}}' 2>/dev/null)
            if [[ -n "$containers" || "$show_all" == "true" ]]; then
                printf "%-30s %s\n" "$net" "${containers:-None}"
            fi
        fi
    done
}

# Parse arguments
SHOW_ALL=false
NETWORK=""

while [[ $# -gt 0 ]]; do
    case $1 in
        -a|--all)
            SHOW_ALL=true
            shift
            ;;
        -h|--help)
            show_usage
            exit 0
            ;;
        -*)
            echo -e "${RED}Error:${NC} Unknown option $1"
            show_usage
            exit 1
            ;;
        *)
            NETWORK="$1"
            shift
            ;;
    esac
done

# Check if Docker is running
if ! docker info >/dev/null 2>&1; then
    echo -e "${RED}Error:${NC} Docker is not running"
    exit 1
fi

if [[ -n "$NETWORK" ]]; then
    # Check if network exists
    if ! docker network ls --format '{{.Name}}' | grep -q "^${NETWORK}$"; then
        echo -e "${RED}Error:${NC} Network '$NETWORK' not found"
        exit 1
    fi
    
    show_network_details "$NETWORK"
else
    list_all_networks "$SHOW_ALL"
fi